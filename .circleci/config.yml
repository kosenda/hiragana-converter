version: 2.1

orbs:
  slack: circleci/slack@4.12.6
  gh: circleci/github-cli@2.3.0

executors:
  android:
    docker:
      - image: cimg/android:2024.01

commands:
  set-locale-properties:
    steps:
      - run:
          name: set local.properties
          command: |
            LOCAL_PROPERTIES_PATH=./local.properties
            echo "apiKey=$.Environment.DEBUG_AD_APPLICATION_ID" >> $LOCAL_PROPERTIES_PATH
  restore-and-save-gradle-cache:
    steps:
      - restore_cache:
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
  save-screenshots-to-cache:
    steps:
      - run:
          name: screenshots branch exist to env
          command: echo -n "IS_EXIST_SCREENSHOTS=$(git fetch origin screenshots_$BASE_BRANCH_NAME && echo true || echo false)" >> $BASH_ENV
      - run:
          name: checkout screenshots branch
          command: |
            if [ $IS_EXIST_SCREENSHOTS = "true" ]; then
              git fetch origin screenshots_$BASE_BRANCH_NAME
              git checkout screenshots_$BASE_BRANCH_NAME
            fi
      - run:
          name: screenshots timestamp to env
          command: |
            if [ $IS_EXIST_SCREENSHOTS = "true" ]; then
              echo "export SCREENSHOT_TIMESTAMP=$(cat timestamp)" >> $BASH_ENV
            else
              touch timestamp
            fi
      - run:
          name: zip screenshots
          command: |
            mkdir -p ./temp/zip
            if [ $IS_EXIST_SCREENSHOTS = "true" ]; then
              zip -r ./temp/zip/screenshots.zip ./app/build/outputs/roborazzi
            else
              touch ./temp/zip/no-op
            fi
      - save_cache:
          paths:
            - ./temp/zip
          key: screenshots-{{ checksum "timestamp" }}
      - run:
          name: checkout pr branch
          command: |
            if [ $IS_EXIST_SCREENSHOTS = "true" ]; then
              git checkout $CIRCLE_BRANCH
            fi

jobs:
  dependencies:
    executor: android
    steps:
      - checkout
      - set-locale-properties
      - restore-and-save-gradle-cache

  test-prod:
    executor: android
    steps:
      - checkout
      - set-locale-properties
      - restore-and-save-gradle-cache
      - run:
          neme: gem install bundler
          command: sudo gem install bundler:2.4.12
      - run:
          # Specify Gemfile path and then run bundle install
          name: bundle install
          command: |
            bundle config set --local path 'vendor/bundle'
            bundle install
      - run:
          name: ktlint-check
          command: ./gradlew --continue ktlintCheck
      - run:
          name: test
          command: ./gradlew testProdDebug --stacktrace
      - run:
          name: jacoco-report
          command: ./gradlew jacocoTestReport
      - run:
          name: jacoco-report to zip
          command: zip -r jacocoTestReport.zip ./build/reports/jacoco/jacocoTestReport/html
      - store_artifacts:
          path: jacocoTestReport.zip
      - run:
          name: run-danger-file
          command: bundle exec danger --verbose
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

  compile-mock:
    executor: android
    steps:
      - checkout
      - set-locale-properties
      - restore-and-save-gradle-cache
      - run:
          name: build mock
          command: ./gradlew compileMockDebugSource
      - slack/notify:
          event: fail
          template: basic_fail_1

  save-screenshots:
    executor: android
    steps:
      - checkout
      - set-locale-properties
      - restore-and-save-gradle-cache
      - run:
          name: create screenshots
          command: ./gradlew recordRoborazziProdDebug --stacktrace
      - run:
          name: push screenshots branch
          command: |
            git config --global user.name "$GITHUB_NAME"
            git config --global user.email "$GITHUB_EMAIL"
            git push origin --delete screenshots_$CIRCLE_BRANCH || true

            git checkout --orphan screenshots_$CIRCLE_BRANCH
            git rm --cached -r .

            add_files=$(find . -type f -path "./app/build/outputs/roborazzi/*")
            for file in $add_files; do
              git add -f $file
            done
            
            echo $(date +%s) >> timestamp
            git add timestamp
            
            echo -e "version: 2.1\njobs:\n no-op:\n  machine: true\n  steps:\n  - run: no-op\nworkflows:\n build:\n  jobs:\n   - no-op:\n      filters:\n       branches:\n        only: no-op" > .circleci/config.yml
            git add .circleci/config.yml

            git commit -m "Add screenshot"
            git clean -df
            git push origin HEAD:screenshots_$CIRCLE_BRANCH -f

  compare-screenshots:
    executor: android
    steps:
      - checkout
      - gh/install
      - run:
          name: gh login
          command: echo "$GITHUB_ACCESS_TOKEN" | gh auth login --with-token
      - run:
          name: get base branch name
          command: |
            pr=$(echo https://api.github.com/repos/${CIRCLE_PULL_REQUEST:19} | sed "s/\/pull\//\/pulls\//")
            base=$(curl -s -H "Authorization: token ${GITHUB_ACCESS_TOKEN}" $pr | jq '.base.ref')
            echo "export BASE_BRANCH_NAME=${base}" >> $BASH_ENV
      - save-screenshots-to-cache
      - set-locale-properties
      - restore-and-save-gradle-cache
      - run:
          name: restore timestamp file
          command: echo $SCREENSHOT_TIMESTAMP > timestamp
      - restore_cache:
          key: screenshots-{{ checksum "timestamp" }}
      - run:
          name: unzip screenshots
          command: |
            unzip ./temp/zip/screenshots.zip
            rm -rf ./temp
      - run:
          name: compare screenshots
          command: ./gradlew compareRoborazziProdDebug --stacktrace
      - run:
          name: push companion branch
          command: |
            file_size=$(find ./app/build/outputs/roborazzi -type f | grep -e '.*_compare.png' | wc -l | sed -e 's/[^0-9]//g')
            if [ $file_size -ne 0 ]; then
              git config --global user.name "$GITHUB_NAME"
              git config --global user.email "$GITHUB_EMAIL"
              
              if [ $(echo -n "$(git fetch origin companion_$CIRCLE_BRANCH && echo true || echo false)") = "true" ]; then
                git push origin --delete companion_$CIRCLE_BRANCH
              fi

              git checkout --orphan companion_$CIRCLE_BRANCH
              git rm --cached -r .
            
              add_files=$(find . -type f -path "./app/build/outputs/roborazzi/*" -name "*_compare.png")
              for file in $add_files; do
                git add -f $file
              done

              echo -e "version: 2.1\njobs:\n no-op:\n  machine: true\n  steps:\n  - run: no-op\nworkflows:\n build:\n  jobs:\n   - no-op:\n      filters:\n       branches:\n        only: no-op" > .circleci/config.yml
              git add .circleci/config.yml
            
              git commit -m "Add screenshot diff"
              git push origin HEAD:companion_$CIRCLE_BRANCH -f

              gh workflow run "CommentScreenshotDiff.yml" -f pr_branch_name=$CIRCLE_BRANCH -f pr_number=$(echo $CIRCLE_PULL_REQUEST | sed "s:.*/::")
            fi

workflows:
  test:
    jobs:
      - dependencies
      - test-prod:
          context: slack-secrets
          requires:
            - dependencies
      - compile-mock:
          context: slack-secrets
          requires:
            - dependencies
      - save-screenshots:
          requires:
            - dependencies
          filters:
            branches:
              only:
                - main
                - develop
      - compare-screenshots:
          requires:
            - dependencies
          filters:
            branches:
              ignore:
                - main
                - develop

# ■ memo ■
# check command： circleci config validate
