version: 2.1

orbs:
  slack: circleci/slack@4.12.6
  gh: circleci/github-cli@2.3.0

executors:
  android:
    docker:
      - image: cimg/android:2024.01

commands:
  set-locale-properties:
    steps:
      - run:
          name: set local.properties
          command: |
            LOCAL_PROPERTIES_PATH=./local.properties
            echo "apiKey=$.Environment.DEBUG_AD_APPLICATION_ID" >> $LOCAL_PROPERTIES_PATH
  restore-and-save-gradle-cache:
    steps:
      - restore_cache:
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}

jobs:
  dependencies:
    executor: android
    steps:
      - checkout
      - set-locale-properties
      - restore-and-save-gradle-cache
      - persist_to_workspace:
          root: .
          paths:
            - .

  test-prod:
    executor: android
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          neme: gem install bundler
          command: sudo gem install bundler:2.4.12
      - run:
          # Specify Gemfile path and then run bundle install
          name: bundle install
          command: |
            bundle config set --local path 'vendor/bundle'
            bundle install
      - run:
          name: ktlint-check
          command: ./gradlew --continue ktlintCheck
      - run:
          name: test
          command: ./gradlew testProdDebug --stacktrace
      - run:
          name: jacoco-report
          command: ./gradlew jacocoTestReport
      - run:
          name: jacoco-report to zip
          command: zip -r jacocoTestReport.zip ./build/reports/jacoco/jacocoTestReport/html
      - store_artifacts:
          path: jacocoTestReport.zip
      - run:
          name: run-danger-file
          command: bundle exec danger --verbose
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

  compile-mock:
    executor: android
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: build mock
          command: ./gradlew compileMockDebugSource
      - slack/notify:
          event: fail
          template: basic_fail_1

  save-screenshots:
    executor: android
    steps:
      - checkout
      - gh/install
      - run:
          name: gh login
          command: echo "$DANGER_GITHUB_API_TOKEN" | gh auth login --with-token
      - run:
          name: use github actions workflow
          command: gh workflow run "SaveScreenshot.yml" branch_name=$CIRCLE_BRANCH

  compare-screenshots:
    executor: android
    steps:
      - checkout
      - gh/install
      - run:
          name: gh login
          command: echo "$DANGER_GITHUB_API_TOKEN" | gh auth login --with-token
      - run:
          name: get base branch name
          command: |
            # ◼ get base branch name
            pr=$(echo https://api.github.com/repos/${CIRCLE_PULL_REQUEST:19} | sed "s/\/pull\//\/pulls\//")
            base=$(curl -s -H "Authorization: token ${DANGER_GITHUB_API_TOKEN}" $pr | jq '.base.ref')
            echo "base branch name: $base"
            echo "export BASE_BRANCH_NAME=${base}" >> $BASH_ENV
      - run:
          name: use github actions workflow
          command: gh workflow run "CompareScreenshot.yml" pr_branch_name=$CIRCLE_BRANCH pr_number=$CIRCLE_PR_NUMBER base_branch_name=$BASE_BRANCH_NAME

workflows:
  test:
    jobs:
      - dependencies
      - test-prod:
          context: slack-secrets
          requires:
            - dependencies
      - compile-mock:
          context: slack-secrets
          requires:
            - dependencies
      - save-screenshots:
          requires:
            - dependencies
          filters:
            branches:
              only:
                - main
                - develop
      - compare-screenshots:
          requires:
            - dependencies
          filters:
            branches:
              ignore:
                - main
                - develop

# ■ memo ■
# check command： circleci config validate
