version: 2.1

orbs:
  slack: circleci/slack@4.12.5
  gh: circleci/github-cli@2.3.0

executors:
  android:
    docker:
      - image: cimg/android:2023.12

commands:
  set-locale-properties:
    steps:
      - run:
          name: set local.properties
          command: |
            LOCAL_PROPERTIES_PATH=./local.properties
            echo "apiKey=$.Environment.DEBUG_AD_APPLICATION_ID" >> $LOCAL_PROPERTIES_PATH

  restore-and-save-gradle-cache:
    steps:
      - restore_cache:
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}

jobs:
  build-and-test-prod:
    executor: android
    steps:
      - checkout
      - set-locale-properties
      - restore-and-save-gradle-cache
      - run:
          neme: gem install bundler
          command: sudo gem install bundler:2.4.12
      - run:
          # Specify Gemfile path and then run bundle install
          name: bundle install
          command: |
            bundle config set --local path 'vendor/bundle'
            bundle install
      - run:
          name: ktlint-check
          command: ./gradlew --continue ktlintCheck
      - run:
          name: test
          command: ./gradlew testProdDebug --stacktrace
      - restore_cache:
          key: "Roborazzi"
      - run:
          name: compare screenshots
          command: ./gradlew compareRoborazziProdDebug --stacktrace
      - run:
          name: move screenshots files
          command: |
            mkdir -p ./build/outputs/roborazzi/compareProdDebug
            mv ./app/build/outputs/roborazzi ./build/outputs/roborazzi/compareProdDebug
      - run:
          name: create screenshots
          command: ./gradlew recordRoborazziProdDebug --stacktrace
      - save_cache:
          paths:
            - ./app/build/outputs/roborazzi
          key: "Roborazzi"
      - store_artifacts:
          path: ./app/build/outputs/roborazzi
      - gh/install
      - run:
          name: gh login
          command: |
            header=$(echo -n '{"alg":"RS256","typ":"JWT"}' | base64 -w 0)
            now=$(date "+%s")
            iat=$((${now} - 60))
            exp=$((${now} + (10 * 60)))
            github_app_id="$APP_ID" # App ID
            payload=$(echo -n "{\"iat\":${iat},\"exp\":${exp},\"iss\":${github_app_id}}" | base64 -w 0)
            echo $COMMENT_GITHUB_API_TOKEN | base64 --decode > ./githubapps
            unsigned_token="${header}.${payload}"
            signed_token=$(echo -n $(echo -n "${unsigned_token}" | openssl dgst -binary -sha256 -sign "./githubapps" | base64))
            rm ./githubapps
            jwt="${unsigned_token}.${signed_token}"
            user_name="kosenda" # githubアカウント
            installation_id=$(
              curl -s -X GET \
                -H "Authorization: Bearer ${jwt}" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/app/installations" \
              | jq -r ".[] | select(.account.login == \"${user_name}\" and .account.type == \"User\") | .id"
            ) # account_type が Organization の場合は $user_name は OrganizationName にする
            echo $(
              curl -s -X POST \
                -H "Authorization: Bearer ${jwt}" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/app/installations/${installation_id}/access_tokens" \
              | jq -r ".token"
            ) | gh auth login --with-token
      - run:
          name: create comments
          command: |
            cat \<< EOF > comments
            |name|image|
            |---|---|
            |temp|<img src="./app/build/outputs/roborazzi|ksnd.hiraganaconverter.view.screen.ConverterScreenTest.convertScreen_dark_compare.png" width="350">|
            EOF
      - run:
          name: test comment
          command: gh pr comment "$CIRCLE_PULL_REQUEST" --edit-last -F ./comments || gh pr comment "$CIRCLE_PULL_REQUEST" -F ./comments
      - run:
          name: jacoco-report
          command: ./gradlew jacocoTestReport
      - run:
          name: jacoco-report to zip
          command: zip -r jacocoTestReport.zip ./build/reports/jacoco/jacocoTestReport/html
      - store_artifacts:
          path: jacocoTestReport.zip
      - run:
          name: run-danger-file
          command: bundle exec danger --verbose
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

  build-mock:
    executor: android
    steps:
      - checkout
      - set-locale-properties
      - restore-and-save-gradle-cache
      - run:
          name: build mock
          command: ./gradlew compileMockDebugSource
      - slack/notify:
          event: fail
          template: basic_fail_1

workflows:
  test:
    jobs:
      - build-and-test-prod:
          context: slack-secrets
      - build-mock:
          context: slack-secrets

# ■ memo ■
# check command： circleci config validate
